{"version":3,"sources":["assets/search.svg","assets/at.svg","assets/close.svg","components/SearchBar.js","components/SearchResultsUser.js","components/SearchResults.js","components/Header.js","components/Profile.js","components/Tweet.js","components/Feed.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","props","handleKeyDown","e","state","value","viewUser","foc","setState","focus","blu","handleChange","bind","event","this","target","className","src","AtImage","SearchImage","placeholder","onFocus","onBlur","type","onChange","onKeyDown","Component","SearchResultsUser","onClick","console","log","displayUser","name","username","pic","followers","followings","protected_acc","handleOnClick","style","backgroundImage","SearchResults","results","length","map","item","screen_name","profile_image_url","followers_count","friends_count","protected","Header","oldstate","a","fetch","then","data","json","oldState","generalTweets","Profile","Tweet","user","text","Feed","obj","Object","values","Content","keyword","filterTweets","profile","following","SearchIcon","DeleteIcon","App","query","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cac44ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.2ea4c436.svg\";","module.exports = __webpack_public_path__ + \"static/media/at.4ee81b68.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.c4c396d3.svg\";","import React, {Component} from 'react';\nimport SearchImage from '../assets/search.svg';\nimport AtImage from '../assets/at.svg';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {focus: false, value: ''};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({value: event.target.value});\n    this.props.viewUser(event.target.value);\n  }\n\n  handleKeyDown = (e) => {\n    if(this.state.value == '') this.props.viewUser(\"\");\n  }\n\n  foc = () => {\n    this.setState( () => {\n      return {focus: true};\n    });\n  }\n\n  blu = () => {\n    this.setState( () => {\n      return {focus: false};\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"searchicon\">\n          <img src={this.state.focus ? AtImage : SearchImage} />\n        </div>\n\n        <input className=\"searchinput\" placeholder=\"search user\" onFocus={this.foc} onBlur={this.blu} type=\"text\" value={this.state.value} onChange={this.handleChange} onKeyDown={this.handleKeyDown}/>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, {Component} from 'react';\nimport './SearchResultsUser.css';\n\nclass SearchResultsUser extends Component {\n  render(){\n    return (\n      <div className=\"SearchResultsUser\" onClick={() => {\n\n        console.log(this.props);\n        this.props.displayUser(this.props.name, this.props.username, this.props.pic, this.props.followers, this.props.followings, this.props.protected_acc);\n        this.props.handleOnClick();}\n\n      }>\n        <div style={{backgroundImage: `url(${this.props.pic})`}} className=\"profilepic\"></div>\n        <div className=\"textcontainer\">\n          <p>{this.props.name}</p>\n          <p>@{this.props.username}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResultsUser;\n","import React, {Component} from 'react';\nimport './SearchResults.css';\nimport SearchResultsUser from './SearchResultsUser';\n\nclass SearchResults extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {results: []}; //format {name: \"\", username: \"\"}\n  }\n\n  componentWillReceiveProps(props){\n    this.setState( () => {\n      return {results: props.results};\n    });\n  }\n\n  render(){\n    return (\n      <div className={this.state.results.length == 0 ? \"SearchResults gone\" : \"SearchResults\"}>\n        {this.state.results.map( (item) => <SearchResultsUser name={item.name} username={item.screen_name} pic={item.profile_image_url} displayUser={this.props.displayUser} handleOnClick={this.props.handleOnClick} followers={item.followers_count} followings={item.friends_count} protected_acc={item.protected}/>)}\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, {Component} from 'react';\nimport './Header.css';\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\n\nclass Header extends Component {\n  constructor(props){\n    super(props);\n    this.state = {results:[]};\n  }\n  \n  viewUser = (username) => {\n    if(username== \"\"){\n      this.setState( (oldstate) => {\n        var a = oldstate;\n        a.results = [];\n        return a;\n      });\n    }\n    else {\n      fetch('http://localhost:80/searchuser/'+username+'/5').then((data) => data.json()).then(\n      (data) => {\n        this.setState( (oldstate) => {\n          var a = oldstate;\n          a.results = data;\n          return a;\n        });\n      });\n    }\n  }\n\n  handleOnClick = () => {\n    this.setState((oldState)=>{\n      var a = oldState;\n      a.results = [];\n      return a;\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"Header\">\n        <h1 onClick={() => {this.props.generalTweets()}}>Slync-Twitter</h1>\n        <div className=\"searchuser\">\n          <SearchBar viewUser={this.viewUser} />\n          <SearchResults displayUser={this.props.displayUser} handleOnClick={this.handleOnClick} results={this.state.results}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport './Profile.css';\n\n\nclass Profile extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {name: null, username: null, pic: null, followers: null, followings: null, protected_acc: null}\n  }\n\n  componentWillReceiveProps(props){\n    this.setState(props.data);\n  }\n\n  render(){\n    return (\n      <div className={this.state.name != null ? \"Profile\" : \"Profile profile-none\"}>\n        <div className=\"profiledata\">\n          <div style={{backgroundImage: `url(${this.state.pic != null ? this.state.pic : \"\"})`}} className=\"profilepic\"></div>\n          <div className=\"titlecontainer\">\n            <h2 className=\"white\">{this.state.name != null ? this.state.name : \"\"}</h2>\n            <p className=\"white\">@{this.state.username != null ? this.state.username : \"\"}</p>\n          </div>\n        </div>\n        <div className=\"profile-numbers\">\n          <p className=\"white\"><b>{this.state.followers}</b> Followers</p>\n          <br/>\n          <p className=\"white\"><b>{this.state.followings}</b> Following</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport './Tweet.css';\n\n\nclass Tweet extends Component {\n  render(){\n    return (\n      <div className=\"Tweet\">\n        <div className=\"tweetprofile\">\n          <div style={{backgroundImage: `url(${this.props.data.user.profile_image_url})`}} className=\"profilepic\">\n          </div>\n\n          <div className=\"profiletext\">\n            <p><b>{this.props.data.user.name}</b></p>\n            <p>{this.props.data.user.screen_name}</p>\n          </div>\n        </div>\n\n        <p className=\"message\">{this.props.data.text}</p>\n      </div>\n    );\n  }\n}\n\nexport default Tweet;\n","import React, {Component} from 'react';\nimport './Feed.css';\nimport Tweet from './Tweet';\n\n\nclass Feed extends Component {\n  constructor(props){\n    super(props);\n    this.state = {obj: []};\n  }\n\n  componentWillReceiveProps(props){\n    this.setState(props);\n  }\n\n  render(){\n    return (\n      <div className=\"Feed\">\n        {Object.values(this.state.obj).map( (item) => <Tweet data={item} />)}\n      </div>\n    );\n  }\n}\n\nexport default Feed;\n","import React, {Component} from 'react';\nimport './Content.css';\nimport SearchIcon from '../assets/search.svg';\nimport DeleteIcon from '../assets/close.svg';\nimport Profile from './Profile';\nimport Feed from './Feed';\n\nclass Content extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {profile: {name: null, username: null, pic: null, followers: null, following: null, protected_acc: null}, data: [], keyword:null};\n  }\n\n  componentWillReceiveProps(props){\n    this.setState(props);\n  }\n\n  handleChange = (event) =>{\n    this.setState({keyword: event.target.value});\n    this.props.filterTweets(event.target.value);\n  }\n\n  render(){\n    return (\n      <div className=\"Content\">\n        <div className=\"content-container\">\n          <Profile data={this.state.profile}/>\n          <div className={this.state.profile.name != null ? \"tweetheader\" : \"gone\"} >\n            <h2 className=\"blue\">Tweets</h2>\n            <div className=\"searchbar\">\n              <div className=\"searchicon\">\n                <img src={SearchIcon} />\n              </div>\n              <input className=\"searchinput\" placeholder=\"search tweets\" value={this.state.keyword} onChange={this.handleChange}/>\n              <div className=\"searchdelete\">\n                <img src={DeleteIcon} />\n              </div>\n            </div>\n          </div>\n          <Feed obj={this.state.data} keyword={this.state.keyword}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {profile: {name: null, username: null, pic: null, followers: null, following: null, protected: null}, data: []};\n    fetch('http://localhost:80/generalSample')\n    .then((data) => data.json())\n    .then((data) =>{\n      this.setState((oldstate) => {\n        var a = oldstate;\n        a.data = data;\n        return a;\n      });\n    });\n\n\n  }\n\n  generalTweets = () =>{\n    fetch('http://localhost:80/generalSample')\n    .then((data) => data.json())\n    .then((data) =>{\n      this.setState((oldstate) => {\n        var a = oldstate;\n        a.data = data;\n        a.profile = {name: null, username: null, pic: null, followers: null, following: null};\n        return a;\n      });\n    });\n\n  }\n\n  displayUser = (name, username, pic, followers, followings, protected_acc) =>{\n    console.log(protected_acc);\n    if(protected_acc){\n      this.setState((oldState)=> {\n        var a = oldState;\n        a.profile = {name: name, username: username, pic: pic, followers: followers, followings: followings};\n        a.data = [];\n        return a;\n      })\n    }\n    else{\n      fetch('http://localhost:80/tweets/'+username+'/10')\n      .then((data) => data.json())\n      .then((data) =>{\n        this.setState((oldstate) => {\n          var a = oldstate;\n          a.data = data;\n          a.profile = {name: name, username: username, pic: pic, followers: followers, followings: followings};\n          return a;\n        });\n      });\n    }\n  }\n\n\n  filterTweets = (query) => {\n    if(query == \"\"){\n      this.setState((oldState) => {\n        var a = oldState;\n        return a;\n      })\n    }\n    else{\n      fetch('http://localhost:80/tweetsq/'+this.state.profile.username+'/'+query)\n      .then((data) => data.json())\n      .then((data) =>{\n        this.setState((oldstate) => {\n          var a = oldstate;\n          a.data = data;\n          return a;\n        });\n      });\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"center\">\n          <Header displayUser={this.displayUser} generalTweets={this.generalTweets}/>\n        </div>\n        <div className=\"center scroll\">\n          <Content data={this.state.data} profile={this.state.profile} filterTweets={this.filterTweets}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}